MASTERING BTC NTS

Descrip: This is an overall notes section on the bitcoin, including the full system from wallets, transactions, blocks, mining etc.

GLOSSARY

Transaction ledger - The blockchain

Bitcoin is a fully distributed peer to peer system, with no real coins instead value is implied via signed (for auth - stop counterfiet) transactions.

The bitcoin protocol stack is open source and the protcol communicated via the internet. 

Currency issused via mining at fixed rate with 4 year halfing leading to cap of 21 million by 2040!!

HISTORY

2008 - white paper released by satoshi nakaomoto
2009 - bitcoin network started

CLIENTS

 - Full Index Node (controls full protocol and holds backup of all transaction)
 - Light (controls wallets, relies on servers for tranasction and network)
 - Web (Holds nothing, acts as api to servers for protocols) - use GRPC API to gather unspent transactions

TRUSTED TRANSACTION

Blockchain explorer - Search engine for tranas using an address

Tranasctions are made from inputs that contain the prev tranasction which was encumbered
The output will be encumbered by using the receivers pub key so that only they can use it via signature

An output will contain change back to the sender if the input doesnt match the payment amount
Inputs are combined and can be to multiple outputs if required

When sent to the network all nodes (in the peer-peer network) will forward to other nodes any transaction the recieve, within a few seconds the client will recieve from the send the transaction

Clients can be confident if the transaction uses unspent prev transaction and enough transaction fee to be mined

Output != Input //Delta is transaction fee

When a new block is mined the fingerprint of the previous block is used 
When the solution is found the transaction is added to the blockchain
After 6 Blocks ontop considered trusted (irrevocable) and irreverable due to comp required for reversal

Full client will check entire transaction history back to mined coin
Light client will be based on check if its in the blockchain and has blocks ontop


THE BITCOIN CLINET (bitcoind , the satoshi client)

btcd - go client

interesting side mission -------

Eliptical curve crypto (ECC)

Trapdoor func - Math func A->B easy | B->A very hard
ECC much more secure for the same storage size ie 256 bit 

Eliptic curve - symmetric on the x axis and 3 intercepts on any straight line
Priv = (n dot^n)

384 - military safe 

bitcoin uses spec256k1
y^2 = (x^3 + 7) over F_p(modulo prime number p)
---------------

private key (random 256 bit number) -> pub key (Crypto func (elliptic) -> Address (Hash)

pub key -> Address is SHA256 has then RIPEMD160 Hash ends with 160 bit number
pub key - prefix + x coor + y coor

Base58Check Encoding (WIF) Wallet import format

Encoded in base58 without 0OlI, with checksum (double hash added to end) to avoid human mistakes

To save data compressed pub keys omit y (cacl using eq) but need a specific prefix to show odd or even (02 even 03 odd)
priv key compressed (WIF-compressed) outputs compressed pub key and address, priv key uncompressed(WIF) does not

Seeded wallets or determinstic use a seed and hash to generate the priv key. (non determinstic use a bunch of random priv keys)
Mnemonic code words - Seed can be generated from a bunch of words.

Child keys made from a hash of parent pub/priv key, chain code and index number.
The chain code adds randomness so a child cant be used to find another child only on its index.

HD wallets allow easy tracing of pub keys to childs but seperate out the priv key, good for ecommerce (customer needs pub key) server.

Extended key - Comb pub key and chain code

HD wallets issue leaked child priv key makes the master key vunerable
Use hardened child key (made from priv key in hash not pub)

BIP0043 and BIP0044 - standards for HD wallet structure

standard btc address starts with 1
P2SH pay to script hash instead uses a script to create the address, encumbering payments to that address with the script. ie used for multi sig proof before use of a transaction.

Vanity address - chosen words in address calculated using brute force

UTXO - Unspent transaction output

Fees calculated based on transaction memory size

If child trans received before parent then stored in temp orphan pool with set number of max stored childs allowed

Script language (turing incompletness and statless (very portable)) simple for security uses stacks (pop and push)

Process is unlock script output -> lock script

5 standards P2PKH (compares pub key hash then checks sig)
- P2PK (crappy P2PKH)
- OP_return (store unspendable data 40 bytes)
- P2SH (compare script hash, then run script) uses script hash as address


THE BITCOIN NETWORK

- Uses the bitcoin P2P protocol, other protcols can communicate to the network via the btc P2P protocol

- Pool protocol servers act as gateways to "bridge" between the btc P2P protocol and others such as Stratum

- On start up of a client it will noramlly use seeded other peers to gather the required data (can use specified ip of another peer)

- Will then setup connection to a number of peers
- During the blockchain download the number of blocks transimtted is limited to not overwhelm the network

- Simple Payment Verifaction nodes (SPV) lightweight mobile nodes, check if the transaction is 6 blocks deep to verify transaction, full node would use a full check of the blockchain.

- SPV only keep track of block headers and (want to know) the transactions they care about. IE thier address related - causes privacy issue if watched.

- To protect from privacy issue use Bloom filters (use hash and array) to make transaction pattern that will match the wanted trans and a other random ones. It is a probabalistic search filter, the more hashes it uses or the smaller the array the less accurate but better privacy.

- Transaction pools held in every node to hold all unconfirmed trans, each node verifies it then adds to pool. Also orphan pools for trans where the parent hasnt been received this could be a long chain triggered to move into trans pool if the head parents is received.

- Alert messages only usable by a few core devs (priv key holder) to show a serious blockchain issue



